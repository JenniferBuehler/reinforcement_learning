.TH "/home/jenny/RL/rl_only/include/rl/PolicyIteration.h" 3 "Wed Oct 28 2015" "LearningAlgorithms" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/jenny/RL/rl_only/include/rl/PolicyIteration.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <rl/MaxUtility\&.h>\fP
.br
\fC#include <rl/State\&.h>\fP
.br
\fC#include <rl/Action\&.h>\fP
.br
\fC#include <rl/StateAlgorithms\&.h>\fP
.br
\fC#include <rl/Utility\&.h>\fP
.br
\fC#include <rl/Reward\&.h>\fP
.br
\fC#include <rl/Policy\&.h>\fP
.br
\fC#include <rl/Transition\&.h>\fP
.br
\fC#include <rl/LogBinding\&.h>\fP
.br
\fC#include <math/FloatComparison\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBrl::PolicyIterationUpdate< State, Action >\fP"
.br
.RI "\fIImplements one iteration update for policy iteration algorithm\&. method \fBpreApplication()\fP has to be called, before this update is applied to all states of the domain\&. method isChanged() can be used to see whether no changes have been made on the policy during an update\&. \fP"
.ti -1c
.RI "class \fBrl::PolicyInitialisation< State, Action >\fP"
.br
.ti -1c
.RI "class \fBrl::PolicyIterationController< Domain >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBrl\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<class State , class Action > std::shared_ptr< Policy< State, Action > > \fBrl::policyIteration\fP (std::shared_ptr< Utility< State > > u, std::shared_ptr< Policy< State, Action > > p, std::shared_ptr< const Reward< State > > r, std::shared_ptr< const Transition< State, Action > > t, std::shared_ptr< const StateGenerator< State > > sg, std::shared_ptr< const ActionGenerator< Action > > ag, float discount, unsigned int modPolicyIter=5)"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for LearningAlgorithms from the source code\&.
