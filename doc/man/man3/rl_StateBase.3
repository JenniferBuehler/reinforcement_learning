.TH "rl::StateBase" 3 "Wed Oct 28 2015" "LearningAlgorithms" \" -*- nroff -*-
.ad l
.nh
.SH NAME
rl::StateBase \- Base class for all states possible in a domain\&. This must include ALL possible states in a domain within the SAME implementing subclass\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <State\&.h>\fP
.PP
Inherited by \fBrl::GridWorldState\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::shared_ptr< \fBStateBase\fP > \fBStateBasePtrT\fP"
.br
.ti -1c
.RI "typedef std::shared_ptr< const \fBStateBase\fP > const \fBStateBaseConstPtrT\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStateBase\fP ()"
.br
.ti -1c
.RI "\fBStateBase\fP (const \fBStateBase\fP &o)"
.br
.ti -1c
.RI "virtual \fB~StateBase\fP ()"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBStateBase\fP &s) const "
.br
.ti -1c
.RI "\fBStateBase\fP & \fBoperator=\fP (const \fBStateBase\fP &o)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBless\fP (const \fBStateBase\fP &s) const =0"
.br
.ti -1c
.RI "virtual void \fBprint\fP (std::ostream &o) const =0"
.br
.ti -1c
.RI "virtual void \fBassign\fP (const \fBStateBase\fP &o)=0"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &o, const \fBStateBase\fP &s)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Base class for all states possible in a domain\&. This must include ALL possible states in a domain within the SAME implementing subclass\&. 

Example for the 2D grid world: A derived class can contain 2D coordinates of the position on the grid\&.\&.
.PP
All subclasses should have the copy constructor and assignment operators implemented (using the same class type as paramter for the assignment operator)\&. 
.PP
\fBAuthor:\fP
.RS 4
Jennifer Buehler 
.RE
.PP
\fBDate:\fP
.RS 4
May 2011 
.RE
.PP

.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::shared_ptr<const \fBStateBase\fP> const \fBrl::StateBase::StateBaseConstPtrT\fP"

.SS "typedef std::shared_ptr<\fBStateBase\fP> \fBrl::StateBase::StateBasePtrT\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "rl::StateBase::StateBase ()\fC [inline]\fP"

.SS "rl::StateBase::StateBase (const \fBStateBase\fP & o)\fC [inline]\fP"

.SS "virtual rl::StateBase::~StateBase ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "virtual void rl::StateBase::assign (const \fBStateBase\fP & o)\fC [protected]\fP, \fC [pure virtual]\fP"
Assign another object of the same type (to work as a copy constructor)\&. This will need a dynamic_cast in the subclass\&. If it's not of the same type or can't be assigned, an exception could be thrown or a warning printed\&. It is also stronly recommended to implement a = operator for all subclasses, for efficiency reasons when using templates\&. This method is only supplied to enforce consistency\&. It will be called from this base class = operator\&. 
.PP
Implemented in \fBrl::GridWorldState\fP\&.
.SS "virtual bool rl::StateBase::less (const \fBStateBase\fP & s) const\fC [protected]\fP, \fC [pure virtual]\fP"

.PP
Implemented in \fBrl::GridWorldState\fP\&.
.SS "bool rl::StateBase::operator< (const \fBStateBase\fP & s) const\fC [inline]\fP"

.SS "\fBStateBase\fP& rl::StateBase::operator= (const \fBStateBase\fP & o)\fC [inline]\fP"

.SS "virtual void rl::StateBase::print (std::ostream & o) const\fC [protected]\fP, \fC [pure virtual]\fP"
print description of the state into ostream o, and return o\&. 
.PP
Implemented in \fBrl::GridWorldState\fP\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "std::ostream& operator<< (std::ostream & o, const \fBStateBase\fP & s)\fC [friend]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for LearningAlgorithms from the source code\&.
